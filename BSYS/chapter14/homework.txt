1)

Segmentation fault (core dumped)

2)

(gdb) run
Starting program: /home/niklas/htwg/BSYS/chapter14/null 

Program received signal SIGSEGV, Segmentation fault.
0x0000555555555161 in main () at null.c:9
9	    value = *pointer;

3)

==19238== Memcheck, a memory error detector
==19238== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19238== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==19238== Command: ./null
==19238== 
==19238== Invalid read of size 4
==19238==    at 0x109161: main (null.c:9)
==19238==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==19238== 
==19238== 
==19238== Process terminating with default action of signal 11 (SIGSEGV)
==19238==  Access not within mapped region at address 0x0
==19238==    at 0x109161: main (null.c:9)
==19238==  If you believe this happened as a result of a stack
==19238==  overflow in your program's main thread (unlikely but
==19238==  possible), you can try to increase the size of the
==19238==  main thread stack using the --main-stacksize= flag.
==19238==  The main thread stack size used in this run was 8388608.
==19238== 
==19238== HEAP SUMMARY:
==19238==     in use at exit: 0 bytes in 0 blocks
==19238==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==19238== 
==19238== All heap blocks were freed -- no leaks are possible
==19238== 
==19238== For lists of detected and suppressed errors, rerun with: -s
==19238== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)

4)

Es compiled und läuft normal. auch gdb findet keine Probleme, da es nicht den Speicherverlust analysiert.

==19756== HEAP SUMMARY:
==19756==     in use at exit: 10 bytes in 1 blocks
==19756==   total heap usage: 2 allocs, 1 frees, 1,034 bytes allocated
==19756== 
==19756== 10 bytes in 1 blocks are definitely lost in loss record 1 of 1
==19756==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==19756==    by 0x10917E: main (forgetFree.c:6)
==19756== 
==19756== LEAK SUMMARY:
==19756==    definitely lost: 10 bytes in 1 blocks
==19756==    indirectly lost: 0 bytes in 0 blocks
==19756==      possibly lost: 0 bytes in 0 blocks
==19756==    still reachable: 0 bytes in 0 blocks
==19756==         suppressed: 0 bytes in 0 blocks
==19756== 
==19756== For lists of detected and suppressed errors, rerun with: -s
==19756== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Jedoch meldet Valgrind den Memory Loss der 10 allocierten Bytes.

5)

==19950== Invalid write of size 4
==19950==    at 0x10916D: main (array100.c:8)
==19950==  Address 0x4a551d0 is 0 bytes after a block of size 400 alloc'd
==19950==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==19950==    by 0x10915E: main (array100.c:6)
==19950== 
==19950== 
==19950== HEAP SUMMARY:
==19950==     in use at exit: 400 bytes in 1 blocks
==19950==   total heap usage: 1 allocs, 0 frees, 400 bytes allocated
==19950== 
==19950== 400 bytes in 1 blocks are definitely lost in loss record 1 of 1
==19950==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==19950==    by 0x10915E: main (array100.c:6)
==19950== 
==19950== LEAK SUMMARY:
==19950==    definitely lost: 400 bytes in 1 blocks
==19950==    indirectly lost: 0 bytes in 0 blocks
==19950==      possibly lost: 0 bytes in 0 blocks
==19950==    still reachable: 0 bytes in 0 blocks
==19950==         suppressed: 0 bytes in 0 blocks
==19950== 
==19950== For lists of detected and suppressed errors, rerun with: -s
==19950== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


6)  

==21121== Invalid read of size 4
==21121==    at 0x1091B9: main (array100WithFree.c:10)
==21121==  Address 0x4a55108 is 200 bytes inside a block of size 400 free'd
==21121==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==21121==    by 0x1091AE: main (array100WithFree.c:8)
==21121==  Block was alloc'd at
==21121==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==21121==    by 0x10919E: main (array100WithFree.c:6)
==21121== 
0
==21121== 
==21121== HEAP SUMMARY:
==21121==     in use at exit: 0 bytes in 0 blocks
==21121==   total heap usage: 2 allocs, 2 frees, 1,424 bytes allocated
==21121== 
==21121== All heap blocks were freed -- no leaks are possible
==21121== 
==21121== For lists of detected and suppressed errors, rerun with: -s
==21121== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

7)

free(): invalid pointer
Aborted (core dumped)

8)

Linked List ist relativ einfach zu handhaben, Zugriff vorne und hinten. Zugriff in der Mitte schwierig.
Vektor ist gut für zufällige Lesezugriffe und das Hinzufügen + Löschen am Ende.
